STM8－－AD转换
在许多的单片机应用系统中，都需要A/D 转换器，将模拟量转换成数字量。在STM8 单片机中，提供
的是10 位的A/D，通道数随芯片不同而不同，少的有4 个通道，多的则有16 个通道。
下面的实验程序首先对A/D 输入进行采样，然后将采样结果的高8 位（丢弃最低的2 位），作为延时
参数去调用延时子程序，然后再去驱动LED 控制信号。因此不同的采样值，决定了LED 的闪烁频率。
当旋转ST 三合一开发板上的电位器时，可以看到LED 的闪烁频率发生变化。
同样还是利用ST 的开发工具，生成一个C 语言程序的框架，然后修改其中的main.c，修改后的代码
如下。
// 程序描述：通过AD 模块，采样电位器的电压，改变LED 的闪烁频率
#include "STM8S207C_S.h"
// 函数功能：延时函数
// 输入参数：ms -- 要延时的毫秒数，这里假设CPU 的主频为2MHZ
// 输出参数：无
// 返回值：无
// 备注：无
void DelayMS(unsigned int ms)     延时函数
{
unsigned char i;
while(ms != 0)
{
for(i=0;i<250;i++);
for(i=0;i<75;i++);
ms--;
}
}
main()               主函数
{
int i;
// 将PD3 设置成推挽输出，以便推动LED
PD_DDR = 0x08;             推挽输出，以来输出灯    处理引脚
PD_CR1 = 0x08;
PD_CR2 = 0x00;
            			// 初始化A/D 模块
ADC_CR2 = 0x00; // A/D 结果数据左对齐        开启adc  
ADC_CR1 = 0x00; // ADC 时钟=主时钟/2=1MHZ  
// ADC 转换模式=单次
// 禁止ADC 转换
ADC_CSR = 0x03; // 选择通道3           选择通道  通道对应引脚pd3  注：此处芯片不同，还是要看datesheet芯片资料
  		//芯片资料有说，3通道对应的是ain3 是pb3上面配置出错。如果在s105上的话
ADC_TDRL = 0x20;

for(;;) // 进入无限循环         无限循环，无限采集，，打开后无限采集
{
ADC_CR1 = 0x01; // CR1 寄存器的最低位置1，使能ADC 转换
for(i=0;i<100;i++); // 延时一段时间，至少7uS，保证ADC 模块的上电完成
ADC_CR1 = ADC_CR1 | 0x01; // 再次将CR1 寄存器的最低位置1
			// 使能ADC 转换
while((ADC_CSR & 0x80) == 0); // 等待ADC 结束
i = ADC_DRH; 		// 读出ADC 结果的高8 位
DelayMS(i); 		// 延时一段时间
PD_ODR = PD_ODR ^ 0x08; 	// 将PD3 反相
}
}


输出值是电压值\数值，，用他来输入延时函数里面，，，来表示不同的变化